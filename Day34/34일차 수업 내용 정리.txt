1. 열거형 (enum : Enumerated Values) : 클래스와 성격이 유사 하므로 참조변수의 선언도 가능
				단, 이렇게 선언도니 참조변수는 해당 열거형 내에 선성된
				'열거형 값'만 대입이 가능하다.

  - 기본적으로 '열거형 값'은 Scale.Do와 같이 표현하지만 .case문에서는 표현의 간결함을 위해
    Do와 같이 '열거형 값'의 이름만 명시하기로 약속되어있다. ->  *SimpleEnum.java 예시 참고

  - 모든 열거형은 java.lang.Enum<E> 클래스를 상속한다. 그리고 Enum<E>는 Object
    클래스를 상속한다. (이런 측면에서 볼 때 열거형은 클래스이다.) 그리고 두 열거형
    값은 Person 인스턴스를 참조하는 참조변수이다. 이에 대한 증거로 예제(7.EnumConst.java)에서는 다음
    문장을 통해 toString 메소드가 호출되었음을 보이고 있다.

    열거형의 정의에도 생성자가 없으면 디폴트 생성자가 삽입된다. 다만 생성자는 
    private으로 선언이 되어 직접 인스턴스를 생성하는 것이 불가능할 뿐 이다.

   '열거형 값'의 정체는 다음과 같이 표현할 수 있다.
**public static final Person MAN = new Person();
   public static final Person WOMAN = new Person();
	-> 열거형 값의 실체를 설명하는 문장, 생성자가 private 이라 실제 컴파일은 안됨

 - 열거형의 정의에도 생성자가 없으면 디폴트 생성자가 삽입된다. 다만 생성자는 
    private으로 선언이 되어 직접 인스턴스를 생성하는 것이 불가능할 뿐 이다.

2. 람다 표현 : 매개변수가 1개일때,1문장일때는 소괄호,중괄호,새미콜론이 생략 가능 하나 
                  매개변수가 없을떄는 ()를 무조건 써줘야 한다(중괄호를 생략 했을떄는 return도 생략 해줘야 한다)

	     람다식은 메서드의 매개변수로 전달되어지는 것이 가능하고, 메서드의 결과로 반환될 수도 있다. 
	     람다식으로 인해 메서드를 변수처럼 다루는 것이 가능해진 것이다.

  - abstract가 1개일때만 람다식으로 표현 가능? -> 이 부분은 모르겠음
	** 3.람다식 꼭 읽어 보기

