/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2024-05-16 07:43:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Arrays;

public final class Test1_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(1);
    _jspx_imports_classes.add("java.util.Arrays");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("tr > td:first-child{width:30%;}\r\n");
      out.write("tr > td:last-child{width:70%;}\r\n");
      out.write(".pwChkTxt{color:red;}\r\n");
      out.write("table, tr, td { border : 1px solid black;}\r\n");
      out.write("body {\r\n");
      out.write("	user-select: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("	margin: 0 auto;\r\n");
      out.write("	width: 800px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#submit {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"js/jquery.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	\r\n");
      out.write("	<!-- 3번 문제  -->\r\n");
      out.write("	\r\n");
      out.write("	<form method=\"post\" action=\"JSPTTest5Result.jsp\">\r\n");
      out.write("		<table border=1>\r\n");
      out.write("			<caption>회원가입</caption>\r\n");
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><label for=\"name\">이름</label></td>\r\n");
      out.write("				<td><input type=\"text\" name=\"name\" id=\"name\"\r\n");
      out.write("					required=\"required\">\r\n");
      out.write("			</tr>\r\n");
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><label for=\"id\">아이디</label></td>\r\n");
      out.write("				<td><input type=\"text\" name=\"id\" id=\"id\" required=\"required\">\r\n");
      out.write("			</tr>\r\n");
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><label for=\"pwd\">비밀번호</label></td>\r\n");
      out.write("				<td><input type=\"password\" name=\"pw\" id=\"pwd\"\r\n");
      out.write("					required=\"required\">\r\n");
      out.write("			</tr>\r\n");
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><label for=\"check\">비밀번호 확인</label></td>\r\n");
      out.write("				<td><input type=\"password\" name=\"check\" id=\"check\"\r\n");
      out.write("					required=\"required\">\r\n");
      out.write("					<span class='pwChkTxt'></span>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><label for=\"email\">이메일</label></td>\r\n");
      out.write("				<td><input type=\"email\" name=\"mail\" id=\"email\"\r\n");
      out.write("					required=\"required\">\r\n");
      out.write("			</tr>\r\n");
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><label>취미</label>\r\n");
      out.write("				<td><input type=\"checkbox\" id=\"book\"><label for=\"book\">독서</label>\r\n");
      out.write("					<input type=\"checkbox\" id=\"cook\"><label for=\"cook\">요리</label>\r\n");
      out.write("					<input type=\"checkbox\" id=\"jogging\"><label for=\"jogging\">조깅</label>\r\n");
      out.write("					<input type=\"checkbox\" id=\"swimming\"><label for=\"swimming\">수영</label>\r\n");
      out.write("					<input type=\"checkbox\" id=\"sleep\"><label for=\"sleep\">취침</label>\r\n");
      out.write("				</td>\r\n");
      out.write("			</tr>\r\n");
      out.write("\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><label>전공</label></td>\r\n");
      out.write("				<td><input type=\"radio\" name=\"major\" id=\"korean\"><label\r\n");
      out.write("					for=\"korean\">국어</label> <input type=\"radio\" name=\"major\"\r\n");
      out.write("					id=\"english\"><label for=\"english\">영어</label> <input\r\n");
      out.write("					type=\"radio\" name=\"major\" id=\"math\"><label for=\"math\">수학</label>\r\n");
      out.write("					<input type=\"radio\" name=\"major\" id=\"design\"><label\r\n");
      out.write("					for=\"design\">디자인</label></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td><label for=\"aMobileCarrier\">전화번호</label></td>\r\n");
      out.write("				<td><select id=\"aMobileCarrier\">\r\n");
      out.write("						<option value=\"SKT\">SKT</option>\r\n");
      out.write("						<option value=\"KT\">KT</option>\r\n");
      out.write("						<option value=\"LG\">LG</option>\r\n");
      out.write("				</select></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<td colspan=\"2\" id=\"submit\"><input type=\"submit\" value=\"전송\">\r\n");
      out.write("					<input type=\"reset\" value=\"초기화\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("	</form>\r\n");
      out.write("<script type=\"text/javascript\">		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		$(\"#check\").on(\"keyup\",function (){\r\n");
      out.write("			let pw1 = $(\"#pwd\").val();\r\n");
      out.write("			let check = $(\"#check\").val();\r\n");
      out.write("			\r\n");
      out.write("			if(!vali(check) && pw1 != check)\r\n");
      out.write("			{\r\n");
      out.write("				console.log(pw1);\r\n");
      out.write("				console.log(check);\r\n");
      out.write("				$(\".pwChkTxt\").text(\"비밀번호가 일치하지 않습니다.\");\r\n");
      out.write("			}\r\n");
      out.write("			else\r\n");
      out.write("				$(\".pwChkTxt\").text(\"\");\r\n");
      out.write("		});\r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("        function vali(val){\r\n");
      out.write("        	 \r\n");
      out.write("            if (val === null) return true; \r\n");
      out.write("            if (typeof val === 'string' && val === '') return true;\r\n");
      out.write("            if (typeof val === 'undefined') return true;\r\n");
      out.write("            \r\n");
      out.write("            return false;\r\n");
      out.write("\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
