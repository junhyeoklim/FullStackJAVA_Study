1. executeUpdate(sql) : insert 와 같은 구문을 날릴떄 씀

2. executeQuery(sql) : select 구문을 날릴때 씀 



3. Statement vs Prepared Statement

 *SQL문을 실행할 수 있는 객체, 가장 큰 차이점은 캐시 사용 여부

 - Statement

   쿼리문을 수행할 때마다 SQL 실행단계 1~3 단계를 거침
   SQL 문을 수행하는 과정에서 매번 컴파일을 하기 때문에 성능상 이슈 발생
   실행되는 SQL문을 확인 가능

 - Prepared Statement 

   컴파일이 미리 되어있기 때문에 Statement에 비해 좋은 성능
   특수문자를 자동으로 파싱해주기 때문에 SQL injection 같은 공격을 막을 수 있음
   "?" 부분에만 변화를 주어 쿼리문을 수행하므로 실행되는 SQL문을 파악하기 어려움



4. Prepared Statement를 사용해야 하는 경우

   1) 사용자 입력값으로 쿼리문을 실행하는 경우

      특수 기호가 들어오더라도 알아서 파싱해주므로 이로 인한 에러를 막을 수 있음

   2) 쿼리 반복 수행 작업일 경우

 - Statement를 사용하면 매번 쿼리를 수행할 때마다 
   계속적으로 단계를 거치면서 수행하지만 
   PreparedStatement는 처음 한 번만 세 단계를 거친 후 캐시에 담아 재사용을 한다. 

   만약 동일한 쿼리를 반복적으로 수행한다면 
  PrepardStatement가 DB에 훨씬 적은 부하를 주며, 성능도 좋다.

 * 더 자세한 내용 : https://shuu.tistory.com/129



* ctrl+u 누르면 html 소스코드를 바로 볼 수 있다.

5. html <p></p> 

 - p 태그는 paragraph 태그의 줄임말이다. 
   paragraph는 단락을 의미하므로 p 태그를 사용하면 하나의 단락을 만들 수 있다.


6. 목록 태그

 - ul(unordered list) : 순서가 없는 목록 태그 ex) : o 표시가 나옴

 - ol(ordered list) : 순서가 있는 목록 태그  ex) : 숫자 표시가 나옴

 - li(list item) : 목록 요소

7. table 태그

 - tr : 테이블 줄

 - th : 테이블 헤드 (데이터 베이스 컬럼이라 생각하면 편함)

 - td : 테이블 칸

 - <caption></caption> : 테이블 제목

 - colspan : 칸 합치기

 - rowspan : 줄 합치기