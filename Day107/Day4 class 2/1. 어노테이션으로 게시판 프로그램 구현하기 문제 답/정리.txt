글 등록 구현하기

@Controller
public class InsertBoardController{

	@RequestMapping(value="/insertBoard.do")
	public String insertBoard(BoardVO vo, BoardDAO boardDAO) {
		System.out.println("글 등록 처리");
		boardDAO.insertBoard(vo);
		return "getBoardList.do";
	}
}

글 목록 구현하기

@Controller
public class GetBoardListController{

	@RequestMapping("/getBoardList.do")
	public ModelAndView getBoardList(BoardVO vo, BoardDAO boardDAO, ModelAndView mav) {
		System.out.println("글 목록 검색 처리");
		
    	mav.addObject("boardList", boardDAO.getBoardList(vo));		// Model 정보 저장
    	mav.setViewName("getBoardList.jsp");						// View 정보 저장
    	return mav;							
	}
}

글 상세 보기 구현하기

@Controller
public class GetBoardController{

	@RequestMapping("/getBoard.do")
	public ModelAndView handleRequest(BoardVO vo, BoardDAO boardDAO, ModelAndView mav) {
		System.out.println("글 상세 조회 처리");

		mav.addObject("board", boardDAO.getBoard(vo));		// Model 정보 저장
		mav.setViewName("getBoard.jsp");					// View 정보 저장
		return mav;
	}
}

글 수정 기능 구현하기
@Controller
public class UpdateBoardController{

	@RequestMapping("/updateBoard.do")
	public String updateBoard(BoardVO vo, BoardDAO boardDAO) {
		System.out.println("글 수정 처리");
		
		boardDAO.updateBoard(vo);
		return "getBoardList.do";
	}

}

글 삭제 기능 구현하기

@Controller
public class DeleteBoardController{

	@RequestMapping("/deleteBoard.do")
	public String deleteBoard(BoardVO vo, BoardDAO boardDAO) {
		System.out.println("글 삭제 처리");
		
    		boardDAO.deleteBoard(vo);
		return "getBoardList.do";
	}
}

로그인 기능 구현하기

@Controller
public class LoginController{

	@RequestMapping("/login.do")
	public String login(UserVO vo, UserDAO userDAO) {
		System.out.println("로그인 처리");
		
		if(userDAO.getUser(vo) != null) return "getBoardList.do";
		else return "login.jsp";
	}
}

로그아웃 기능 구현하기

@Controller
public class LogoutController{

	@RequestMapping("/logout.do")
	public String logout(HttpSession session) {
		System.out.println("로그아웃 처리");
		
		session.invalidate();
		return "login.jsp";
	}
}