따라서 src/main/resources 소스 폴더에 있는 applicationContext.xml 파일을 WEB-INF 폴더에 복사하면 ContextLoaderListener는 해당 XML 파일을 읽어 스프링 컨테이너를 정상적으로 구동할 수 있다. 그런데 이렇게 하면 비즈니스 레이어에 해당하는 스프링 설정 파일이 다음처럼 두 곳에 있어서 나중에 관리상 문제가 발생할 수 있다.

src/main/resources/applicationContext.xml
/WEB-INF/applicationContext.xml

그렇다면 두 곳에 있는 XML 설정 파일 중 어떤 파일을 사용해야 할까? 일단은 유지보수 과정에서 비즈니스 컴포넌트를 수정하고 테스트를 진행하기 위해서라도 src/main/resources 소스 폴더에 XML 파일을 위치시키는 것이 맞을 것 같다. 그래야 /src/test/java 소스 폴더에 테스트 클라이언트 프로그램도 실행할 수 있기 때문이다.
그렇다면 src/main/resources 소스 폴더에 위치한 스프링 설정파일을 어떻게 ContextLoaderListener가 읽어들일까? 이를 위해 다음과 같이 web.xml 파일에 <context-param> 설정을 추가해야 한다.

web.xml

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

ContextLoaderListener 객체는 <context-param>으로 등록된 contextConfigLocation 파라미터 정보를 읽어 스프링 컨테이너를 구동하도록 프로그램되어 있다.
이제 web.xml 파일을 저장하고 서버를 재구동해보자. 그러면 ContextLoaderListener 객체가 Pre-Loading 되어 스프링 컨테이너를 먼저 구동하고 이때, 비즈니스 컴포넌트 객체들이 생성되는 것을 확인할 수 있다.
아직 DispatcherServlet은 생성되지 않은 상태다. 이제 적절한 아이디와 비밀번호를 입력하고 로그인 버튼을 클릭해보자. 그러면 최초의 ".do" 요청에 대해서 DispatcherServlet 객체가 생성된다.