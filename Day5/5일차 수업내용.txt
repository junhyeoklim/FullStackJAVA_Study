1. 재귀 메소드(RecursiveMethod) : 자기 자신을 호출하는 메소드 (자기 자신을 호출 하는 것 말곤 다른 메소드랑 차이점 없음)
	* return : 호출한 위치로 return함 (예제 및 사진 찍은거 참조)

   - 반복문을 사용하는 것보다 재귀 메소드를 사용하는 편이 
     더 직관적으로 이해하기 쉬울 때만 한정적으로 사용하는 것이 바람직하다.

-> 이해가 안 된다면 이곳 참고
https://targetcoders.com/재귀함수-예제-이해하기/


2. 클래스 

   (클래스) (식별자) = (new연산자) (생성자:클래스 이름과 동일);
	식별자 :   물리적 주소 가짐


3. 사용자 정의 메소드
 : 메소드 명은 소문자로 시작한다


4. static vs satic final vs final

  - static
    static 키워드를 가진 멤버는 값이 클래스의 모든 인스턴스에 대해 동일합니다. 
    클래스의 모든 인스턴스가 액세스할 수 있는 전역 변수라고 볼 수 있습니다. 
    그러나 static 변수는 상수가 아니므로 언제나 변경될 수 있습니다.

 /*때때로 static 을 설명할 때 단 한 번 초기화 된다는 문구를 볼 수 있는데요. 
   해당 부분을 확인해봐야겠습니다.*/

 /*static 변수가 생성되는 메모리 위치와 실행순서 확인하기.
   클래스로더에 의해서 initialize 단계에서 생성되는 것으로 알고 있다.*/

   - static final
     변경할 수 없고 클래스의 모든 인스턴스에 대해 동일한 값을 설정할 때는 static final을 사용해야 합니다.
      static 키워드는 값이 클래스의 모든 인스턴스에 대해 동일함을 의미합니다. 
      final 키워드는 변수에 값이 할당되면 절대 변경할 수 없음을 의미합니다. 
      Java에서 static final의 조합은 클래스 변수의 상수 값을 만드는 방법입니다.

    - final
      final이 붙은 변수는 상수이므로 일반적으로 선언과 초기화를 동시에 합니다. 
      하지만 인스턴스 변수의 경우 생성자에서 초기화할 수 있습니다.

      그 이유는 인스턴스가 new 키워드로 힙에 생성될 때 
      처음엔 변수 타입의 기본값으로 할당된 후 각 인스턴스에서 설정한 값으로 초기화 되기 때문입니다.
      그러므로 accountId가 final이더라도 각 개별 Account 인스턴스는 고유한 값을 가질 수 있습니다.


5. 멤버 변수

 :  클래스 변수와 인스턴스 변수
   멤버변수는 클래스 변수와 인스턴스 변수로 나눌 수 있다.

   클래스 변수는 모든 객체가 공통적으로 똑같은 속성을 가질 때 사용한다.
   그리고 static을 붙여서 만들 수 있고, 객체를 생성하지 않아도 사용할 수 있다는 특징이 있다.

   즉, 전역 변수의 성질을 가지고 있음을 알 수 있다.

   인스턴스 변수는 각각의 객체마다 개별적인 속성을 가질 때 사용한다.

   그리고 클래스 변수와 다르게 객체 생성을 해야 사용할 수 있다는 특징을 가지고 있다.


5. 전역변수 vs 멤버 변수

 : 클래스 변수가 전역 변수의 성질을 가지고 있다고 했는데

그렇다면 과연 전역 변수와 멤버 변수가 같다고 할 수 있을까? 대답은 아니라고 할 수 있다.

자바에서는 캡슐화를 통해 은닉성을 보장한다는 특징을 가지고 있는데

이는 전역 변수의 개념과는 반대라고 할 수 있다.

자바에서의 전역 변수 역할은 클래스 변수의 static으로 할 수 있다.